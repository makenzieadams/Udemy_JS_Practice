VARIABLES:

Variable is a way to store data for later and use them later

Data Type = refers to different types of data you can work with

YOU CAN'T DEFINE A VARIABLE MORE THAN ONCE:
To actually change a variable to something different take off the variable definition i.e "let"
example: instead of let dog = cash, let dog = apollo;
do let dog = 'cash', dog = apollo and dog will change to apollo

Variable name has to start with a letter OR $ (dollar sign) or \_ (underscore) NOTHING ELSE

Booleans: True or False
Comparison Operators:
-equality operator: ===
-not equal operator: !==
-less than operator: <
-greater than operator: >
-greater than or equal to: >=
-less than or equal to: <=

-If Statements: provide 2 things: condition, goes in (), & code to run, goes in {}, if condition is satisfied
-if (runs first), else(runs if first is false), else if(runs if both are false)

And/Or Statements: chain together multiple comparison operators to create a more complex condition
-And: True if BOTH sides are true, false if not
-Or: True is ONE at least ONE argument is true
-Logical And operator: two ampersands - &&
-Logical Or operator: two vertical bars - ||

Scope: JS uses Lexical scoping (AKA static scoping).
In a scope you can access variables defined in that scope, or in any parent/ancestor in that scope
Global scope: contains all things defined outside of code blocks. Always exists.
Local scope: contains all things inside of code blocks

FUNCTIONS:

A block of code designed to perform a particular task. Can run as many times as you want to.
A function is executed when "something" invokes (call's it)

- 3 important parts to a function: input, code, output
  Input and argument are the same thing
  Output known as return value
  Return can only be used a single time only in functions

  When you return something from a function, you can store it's value in a variable using syntax

  UNDEFINED AND NULL:
  -Will see for variables that are never assigned a calue
  -For function arguments that aren't provided
  -If you try to do something with the return value from a function, but that function doesn't return anything
  -WHEN WE SEE UNDEFINED - IT IS A LANGUAGE DEFAULT
  -WHEN WE SEE NULL - SOMETHING WAS EXPLICITLY CLEARED BY THE DEVELOPER OF THE PROGRAM ABOVE

  ARGUMENTS:
  -A value passed to the function when it is invoked (can include multiple)
  -A default argument: parameters allow named parameters to be initialized with default values if no value or undefined is passed

TEMPLATE STRING
-With template literals, you can use both single and double quotes inside a string
-Template literals provide an easy way to interpolate variables and expressions into strings. The method is called string interpolation. The syntax is ${...}
-Example: let text = `Welcome ${firstName}, ${lastName}!`;

OBJECTS:
-Allows us to store related pieces of info in a single value (key and value)
-Containers for named values called properties (property descriped a piece of data stored on an object)
-Used for descriptions
SYNTAX
-Curly braces (open and close)
-Name then colon(:) then value

How to pull out a piece of info from an object - DOT NOTATION:
-Uses dot key on keyboard = console.log(myBook.title)
-Can also use template string = console.log {`${myBook.title} by ${author}`}

Changing object properties = myBook.title = 'XYZ' (changes the value of the property)
(3 essential things doing with objects: create them, reading property values and changing property values)
